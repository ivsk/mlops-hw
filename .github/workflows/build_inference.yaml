name: Build Inference Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'infer/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  INFERENCE_ECR_REPOSITORY: bert/inference
  TRAINING_ECR_REPOSITORY: bert/training

jobs:      
  build-inference-image:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.build_inference != 'false' }}
    outputs:
      inference_image_uri: ${{ steps.build-push-inference.outputs.image_uri }}
      inference_image_tag: ${{ steps.tagger.outputs.new_tag }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Bump version and push tag
      id: tagger
      uses: anothrNick/github-tag-action@1.67.0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        DEFAULT_BUMP: patch
        PREFIX: "inf-v"
    
    - name: Read base training image version
      id: get-base-version
      run: |
        BASE_TAG=$(cat TRAINING_IMAGE_VERSION)
        echo "Using base training image version: $BASE_TAG"
        echo "base_tag=$BASE_TAG" >> $GITHUB_OUTPUT
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Check if inference image exists
      id: check-inference-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.get-tag.outputs.tag }}
      run: |
        if aws ecr describe-images --repository-name $INFERENCE_ECR_REPOSITORY --image-ids imageTag=$IMAGE_TAG 2>/dev/null; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Inference image with tag $IMAGE_TAG already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Inference image with tag $IMAGE_TAG does not exist"
        fi
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install boto3 sagemaker mlflow==2.16.2 sagemaker-mlflow==0.1.0
    
    - name: Alias the model in mlflow as challenger
      env:
        MLFLOW_TRACKING_SERVER_ARN: ${{ secrets.MLFLOW_TRACKING_SERVER_ARN }}
      run: |
        python .github/scripts/model_aliasing.py --model_name bert-genre-classifier --alias challenger

    - name: Perform unit tests
      run: |
        python -m unittest infer/tests/unit_tests.py

    - name: Download model artifacts
      env:
        MLFLOW_TRACKING_SERVER_ARN: ${{ secrets.MLFLOW_TRACKING_SERVER_ARN }}
      run: |
        python .github/scripts/download_artifacts.py --model_name bert-genre-classifier
        mv model/* infer/app/

    - name: Build and push inference image
      id: build-push-inference
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        BASE_IMAGE_TAG: ${{ steps.get-base-version.outputs.base_tag }}
        INFERENCE_IMAGE_TAG: ${{ steps.tagger.outputs.new_tag }}
      run: |
        BASE_IMAGE_URI="$ECR_REGISTRY/$TRAINING_ECR_REPOSITORY:$BASE_IMAGE_TAG"
        INFERENCE_IMAGE_URI="$ECR_REGISTRY/$INFERENCE_ECR_REPOSITORY:$INFERENCE_IMAGE_TAG"

        echo "🔨 Building inference image $INFERENCE_IMAGE_URI"
        echo "FROM base image $BASE_IMAGE_URI"

        docker build \
          --build-arg BASE_IMAGE_URI=$BASE_IMAGE_URI \
          -f infer/Dockerfile.infer \
          -t $INFERENCE_IMAGE_URI .

        echo "📤 Pushing inference image..."
        docker push $INFERENCE_IMAGE_URI

        # Also tag as 'latest' for convenience
        docker tag $INFERENCE_IMAGE_URI $ECR_REGISTRY/$INFERENCE_ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$INFERENCE_ECR_REPOSITORY:latest
        
        echo "image_uri=$INFERENCE_IMAGE_URI" >> $GITHUB_OUTPUT
        echo "✅ Inference image built and pushed: $INFERENCE_IMAGE_URI"

  summary:
    runs-on: ubuntu-latest
    needs: build-inference-image
    if: always()
    
    steps:
    - name: Build Summary
      run: |
        echo "## 🔨 Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.build-inference-image.result }}" == "success" ]; then
          echo "✅ **Inference Image**: Built successfully" >> $GITHUB_STEP_SUMMARY
          echo "   - URI: ${{ needs.build-inference-image.outputs.inference_image_uri }}" >> $GITHUB_STEP_SUMMARY
          echo "   - Tag: ${{ needs.build-inference-image.outputs.inference_image_tag }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Inference Image**: Build failed or skipped" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY