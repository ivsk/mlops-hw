name: Build Docker Images

on:
  push:
    branches: 
      - main
    paths:
      - 'train/**'
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TRAINING_ECR_REPOSITORY: bert/training

permissions:
  contents: write

jobs:
  build-training-image:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.tagger.outputs.new_tag }}
      image_uri: ${{ steps.build-push.outputs.image_uri }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Bump version and push tag
      id: tagger
      uses: anothrNick/github-tag-action@1.67.0
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        DEFAULT_BUMP: patch
        PREFIX: "train-v"

    - name: Get image tag
      id: get-tag
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          TAG="pr-${{ github.event.number }}-$(git rev-parse --short HEAD)"
        else
          TAG="$(git rev-parse --short HEAD)"
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Using tag: $TAG"
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
        
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      
    - name: Check if training image exists
      id: check-training-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.get-tag.outputs.tag }}
      run: |
        if aws ecr describe-images --repository-name ${{ env.TRAINING_ECR_REPOSITORY }} --image-ids imageTag=$IMAGE_TAG 2>/dev/null; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Training image with tag $IMAGE_TAG already exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Training image with tag $IMAGE_TAG does not exist"
        fi
        
    - name: Build and push training image
      id: build-push
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ steps.tagger.outputs.new_tag }}
      run: |
        IMAGE_URI="$ECR_REGISTRY/$TRAINING_ECR_REPOSITORY:$IMAGE_TAG"
         
        echo "ðŸ”¨ Building training image with tag $IMAGE_TAG..."
        docker build -f training/Dockerfile.train -t $IMAGE_URI .

        echo "ðŸ“¤ Pushing training image..."
        docker push $IMAGE_URI

        docker tag $IMAGE_URI $ECR_REGISTRY/$TRAINING_ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$TRAINING_ECR_REPOSITORY:latest

        echo "image_uri=$IMAGE_URI" >> $GITHUB_OUTPUT
        echo "âœ… Training image pushed: $IMAGE_URI"

    - name: Update version file
      run: |
        echo "Updating TRAINING_IMAGE_VERSION to ${{ steps.tagger.outputs.new_tag }}"
        echo "${{ steps.tagger.outputs.new_tag }}" > TRAINING_IMAGE_VERSION

    - name: Commit updated version file
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "ci: Update training image version to ${{ steps.tagger.outputs.new_tag }}"
        file_pattern: TRAINING_IMAGE_VERSION
        commit_options: '--no-verify'
        